name: Manual PR CI

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR Number'
        required: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
      contents: read

    steps:
      # 步骤1：获取 PR 的 SHA
      - name: Fetch PR SHA
        id: fetch-pr
        uses: actions/github-script@v6
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ inputs.pr_number }},
            });
            core.setOutput('sha', pr.data.head.sha);

      # 步骤2：创建 Check Run 并保存其 ID
      - name: Start CI Check
        id: create-check
        uses: actions/github-script@v6
        with:
          script: |
            const response = await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'Manual CI Check',
              head_sha: '${{ steps.fetch-pr.outputs.sha }}',
              status: 'in_progress',
            });
            core.setOutput('check_run_id', response.data.id);  # 保存 Check Run ID

      # 步骤3：检出代码
      - name: Checkout PR Code
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.fetch-pr.outputs.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}

      # 步骤4：模拟 CI 流程
      - name: Setup environment
        run: echo "Setting up environment"
      
      - name: Build
        run: echo "Building project"
      
      - name: Run tests
        run: echo "Running tests"

      # 步骤5：使用保存的 Check Run ID 更新状态
      - name: Complete CI Check
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.checks.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: ${{ steps.create-check.outputs.check_run_id }},  # 使用正确的 Check Run ID
              conclusion: job.status == 'success' ? 'success' : 'failure',
              completed_at: new Date().toISOString(),
            });
